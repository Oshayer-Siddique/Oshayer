print("Linked list")
class Node:
	def __init__(self,data):
		self.data = data
		self.next = None
class LinkedList:
	def __init__(self):
		self.head = None



print("Creat linked List")

class Node:
    def __init__(self,data):
        self.data = data
        self.next = None

class LinkedList:
    def __init__(self):
        self.head = None

    def printList(self):
        temp = self.head
        while(temp):
            print(temp.data)
            temp = temp.next

llist = LinkedList()

llist.head = Node(1)
second = Node(2)
third = Node(3)

llist.head.next = second
second.next = third

llist.printList()


print("Creat and print Linked List")

class Node:
	def __init__(self,data):
		self.data = data
		self.next = None

class LinkedList:
	def __init__(self):
		self.head = None

	def printlist(self):
		temp = self.head
		while(temp):
			print(temp.data)
			temp = temp.next
if __name__=='__main__':
	llist = LinkedList()
	llist.head = Node(1)
	second = Node(2)
	third = Node("e")
	fourth = Node(44)
	fifth = Node("Oshayer")
	llist.head.next = second
	second.next = third


	llist.printlist()

print("Linked list insertion")
class Node:
	def __init__(self,data):
		self.data = data
		self.next = None
class Linkedlist:
	def __init__(self):
		self.head = None

	def push(self,new_data):
		new_node = Node(new_data)
		new_node.next = self.head
		self.head = new_node


	def printlist(self):
		temp = self.head
		while(temp):
			print(temp.data)
			temp = temp.next
if __name__=='__main__':
	llist = Linkedlist()

	llist.head = Node(1)
	second = Node(2)
	third = Node("e")
	forth = Node("Oshayer")
	llist.push(33)
	llist.head.next = second
	second.next = third
	third.next = forth

	llist.printlist()

print("Create linked list")
class Node:
	def __init__(self,data):
		self.data = data
		self.next = None
class LinkedList:
	def __init__(self):
		self.head  = None

	def printlist(self):
		temp = self.head
		while(temp):
			print(temp.data)
			temp = temp.next

	def push(self,new_data):
		new_node = Node(new_data)
		new_node.next = self.head
		self.head = new_node

if __name__=='__main__':
	llist = LinkedList()

	llist.head = Node(1)
	second = Node(3)
	third = Node("e")
	forth  = Node("Oshayer")
	llist.push(45)
	llist.head.next = second
	second.next = third
	third.next = forth
	llist.printlist()
